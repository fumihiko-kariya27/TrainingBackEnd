plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '6.3.1.5724'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Training Project Backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.5'
	testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-aop'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	classpath += files("src/test/resources")

    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false
        xml.outputLocation = layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")
        html.outputLocation = layout.buildDirectory.dir("reports/jacoco/html")
    }
}

sonar {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_47e2d7fc4366dc40782750d17bebe0a632d1fc90"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}
